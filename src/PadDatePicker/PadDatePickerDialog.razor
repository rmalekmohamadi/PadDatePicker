@namespace PadDatePicker

@inherits PInputBase<DateTimeOffset?>

<div class="@Classes?.Root">
    <div>
        <label class="@Classes?.Label">@Label</label>
        <div class="@Classes?.InputWrapper">
            <div class="@Classes?.InputContainer">
                @if(IconSide.Equals(Side.Start))
                {
                    if (IconTemplate != null)
                    {
                        @IconTemplate
                    }
                    else
                    {
                        <span class="@Classes?.IconWrapper" @onclick="@((e) => Toggle())">
                            <svg class="@Classes?.Icon" fill="currentColor" focusable="false" viewBox="0 0 24 24" aria-hidden="true" role="img" xmlns="http://www.w3.org/2000/svg">
                                <path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z"></path>
                            </svg>
                        </span>
                    }
                }

                <input 
                    @oninput="@HandleOnChange"
                    @onfocus="@HandleOnFocus" 
                    @onfocusout="@HandleOnFocusOut"
                    value="@CurrentValueAsString"
                    type="text" 
                    @attributes="SetAttributes()"
                    @ref="_inputRef"
                    placeholder="@Placeholder"
                    class="@Classes?.Input">
                
                @if(IconSide.Equals(Side.End))
                {
                    if (IconTemplate != null)
                    {
                        @IconTemplate
                    }
                    else
                    {
                        <span class="@Classes?.IconWrapper">
                            <svg class="@Classes?.Icon" fill="currentColor" focusable="false" viewBox="0 0 24 24" aria-hidden="true" role="img" xmlns="http://www.w3.org/2000/svg">
                                <path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z"></path>
                            </svg>
                        </span>
                    }
                }
            </div>
        </div>
    </div>
    
    @if (_isVisible)
    {
        <div class="@Classes?.PickerWrapper">
            <div class="@Classes?.PickerContainer">
                @if (ShowCloseButton)
                {
                    <button 
                        @onclick="Close"
                        type="button" 
                        class="@Classes?.CloseButton" aria-label="Close">
                        <span>
                            <svg class="@Classes?.CloseButtonIcon" style="" fill="currentColor" focusable="false" viewBox="0 0 14 14" aria-hidden="true" role="img" xmlns="http://www.w3.org/2000/svg">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
                            </svg>
                        </span>
                    </button>
                }
                <PadDatePicker Classes="@Classes"
                               Culture="@Culture"
                               TimeFormat="@TimeFormat"
                               HeaderTemplate="@HeaderTemplate"
                               FooterTemplate="@FooterTemplate"
                               DayCellTemplate="@DayCellTemplate"
                               MonthCellTemplate="@MonthCellTemplate"
                               YearCellTemplate="@YearCellTemplate"
                               MaxDate="@MaxDate"
                               MinDate="@MinDate"
                               OnOkButtonClicked="@HandleOnOkClicked"
                               ShowOkButton="@ShowOkButton"
                               OkButtonText="@OkButtonText"
                               OnClearButtonClicked="@OnClearButtonClicked"
                               ShowClearButton="@ShowClearButton"
                               ClearButtonText="@ClearButtonText"
                               ShowToDayButton="@ShowToDayButton"
                               OnToDayButtonClicked="@OnToDayButtonClicked"
                               ToDayButtonText="@ToDayButtonText"
                               HighlightCurrent="@HighlightCurrent"
                               HourStep="@HourStep"
                               MinuteStep="@MinuteStep"
                               Label="@Label"
                               ShowLabelOnHeader="@ShowLabelOnHeader"
                               @bind-Value="Value"
                               />
            </div>
        </div>
    }
</div>